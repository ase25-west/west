
'use strict';

if (typeof console === 'undefined') {
  var Console = function () {
      this.log = function(msg) { debug(msg); };
  };
  var console = new Console();
}

let hostrefs = {};
let hostsym = Symbol("hostref");
function hostref(s) {
  if (! (s in hostrefs)) hostrefs[s] = {[hostsym]: s};
  return hostrefs[s];
}
function eq_ref(x, y) {
  return x === y ? 1 : 0;
}

let spectest = {
  hostref: hostref,
  eq_ref: eq_ref,
  print: console.log.bind(console),
  print_i32: console.log.bind(console),
  print_i64: console.log.bind(console),
  print_i32_f32: console.log.bind(console),
  print_f64_f64: console.log.bind(console),
  print_f32: console.log.bind(console),
  print_f64: console.log.bind(console),
  global_i32: 666,
  global_i64: 666n,
  global_f32: 666.6,
  global_f64: 666.6,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),
  memory: new WebAssembly.Memory({initial: 1, maximum: 2})
};

let handler = {
  get(target, prop) {
    return (prop in target) ?  target[prop] : {};
  }
};
let registry = new Proxy({spectest}, handler);

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes, valid = true) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  let validated;
  try {
    validated = WebAssembly.validate(buffer);
  } catch (e) {
    throw new Error("Wasm validate throws");
  }
  if (validated !== valid) {
    if (!validated) WebAssembly.compile(buffer).catch(e => console.log(e));
    throw new Error("Wasm validate failure" + (valid ? "" : " expected"));
  }
  return new WebAssembly.Module(buffer);
}

function instance(mod, imports = registry) {
  return new WebAssembly.Instance(mod, imports);
}

function call(instance, name, args) {
  return instance.exports[name](...args);
}

function get(instance, name) {
  let v = instance.exports[name];
  return (v instanceof WebAssembly.Global) ? v.value : v;
}

function exports(instance) {
  return {module: instance.exports, spectest: spectest};
}

function run(action) {
  action();
}

function assert_malformed(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm decoding failure expected");
}

function assert_malformed_custom(bytes) {
  return;
}

function assert_invalid(bytes) {
  try { module(bytes, false) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm validation failure expected");
}

function assert_invalid_custom(bytes) {
  return;
}

function assert_unlinkable(mod) {
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.LinkError) return;
  }
  throw new Error("Wasm linking failure expected");
}

function assert_uninstantiable(mod) {
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
    throw new Error("Wasm trap expected, but got: " + e);
  }
  throw new Error("Wasm trap expected");
}

function assert_uninstantiable_inlined(bytes) {
  let mod = module(bytes);
  assert_uninstantiable(mod);
}

function assert_trap(action) {
  try { action() } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
    throw new Error("Wasm trap expected, but got: " + e);
  }
  throw new Error("Wasm trap expected");
}

function assert_exception(action) {
  try { action() } catch (e) { return; }
  throw new Error("exception expected");
}

let StackOverflow;
try { (function f() { 1 + f() })() } catch (e) { StackOverflow = e.constructor }

function assert_exhaustion(action) {
  try { action() } catch (e) {
    if (e instanceof StackOverflow) return;
  }
  throw new Error("Wasm resource exhaustion expected");
}

function assert_return(action, ...expected) {
  let actual = action();
  if (actual === undefined) {
    actual = [];
  } else if (!Array.isArray(actual)) {
    actual = [actual];
  }
  if (actual.length !== expected.length) {
    throw new Error(expected.length + " value(s) expected, got " + actual.length);
  }
  for (let i = 0; i < actual.length; ++i) {
    switch (expected[i]) {
      case "nan:canonical":
      case "nan:arithmetic":
      case "nan:any":
        // Note that JS can't reliably distinguish different NaN values,
        // so there's no good way to test that it's a canonical NaN.
        if (!Number.isNaN(actual[i])) {
          throw new Error("Wasm NaN return value expected, got " + actual[i]);
        };
        return;
      case "ref.i31":
        if (typeof actual[i] !== "number" || (actual[i] & 0x7fffffff) !== actual[i]) {
          throw new Error("Wasm i31 return value expected, got " + actual[i]);
        };
        return;
      case "ref.any":
      case "ref.eq":
      case "ref.struct":
      case "ref.array":
        // For now, JS can't distinguish exported Wasm GC values,
        // so we only test for object.
        if (typeof actual[i] !== "object") {
          throw new Error("Wasm object return value expected, got " + actual[i]);
        };
        return;
      case "ref.func":
        if (typeof actual[i] !== "function") {
          throw new Error("Wasm function return value expected, got " + actual[i]);
        };
        return;
      case "ref.extern":
        if (actual[i] === null) {
          throw new Error("Wasm reference return value expected, got " + actual[i]);
        };
        return;
      case "ref.null":
        if (actual[i] !== null) {
          throw new Error("Wasm null return value expected, got " + actual[i]);
        };
        return;
      default:
        if (!Object.is(actual[i], expected[i])) {
          throw new Error("Wasm return value " + expected[i] + " expected, got " + actual[i]);
        };
    }
  }
}

// imports.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9e\x80\x80\x80\x00\x07\x60\x00\x00\x60\x01\x7f\x00\x60\x01\x7d\x00\x60\x00\x01\x7f\x60\x00\x01\x7d\x60\x01\x7f\x01\x7f\x60\x01\x7e\x01\x7e\x03\x88\x80\x80\x80\x00\x07\x00\x01\x02\x03\x04\x05\x06\x04\x8f\x80\x80\x80\x00\x04\x70\x00\x0a\x70\x01\x0a\x14\x70\x04\x0a\x70\x05\x0a\x14\x05\x8b\x80\x80\x80\x00\x04\x00\x02\x01\x02\x04\x04\x02\x05\x02\x04\x0d\x87\x80\x80\x80\x00\x03\x00\x00\x00\x01\x00\x02\x06\x94\x80\x80\x80\x00\x03\x7f\x00\x41\x37\x0b\x7d\x00\x43\x00\x00\x30\x42\x0b\x7e\x01\x42\xc2\x00\x0b\x07\x95\x82\x80\x80\x00\x15\x04\x66\x75\x6e\x63\x00\x00\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x01\x08\x66\x75\x6e\x63\x2d\x66\x33\x32\x00\x02\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x03\x09\x66\x75\x6e\x63\x2d\x3e\x66\x33\x32\x00\x04\x0d\x66\x75\x6e\x63\x2d\x69\x33\x32\x2d\x3e\x69\x33\x32\x00\x05\x0d\x66\x75\x6e\x63\x2d\x69\x36\x34\x2d\x3e\x69\x36\x34\x00\x06\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x00\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x01\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x02\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x00\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x01\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x02\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x03\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x02\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x03\x03\x74\x61\x67\x04\x00\x07\x74\x61\x67\x2d\x69\x33\x32\x04\x01\x07\x74\x61\x67\x2d\x66\x33\x32\x04\x02\x0a\xbd\x80\x80\x80\x00\x07\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x16\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x30\x41\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b");

// imports.wast:3
let $1 = instance($$1);

// imports.wast:28
register("test", $1)

// imports.wast:33
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa4\x80\x80\x80\x00\x08\x60\x01\x7f\x00\x60\x01\x7e\x00\x60\x01\x7d\x00\x60\x01\x7c\x00\x60\x01\x7f\x00\x60\x02\x7f\x7d\x00\x60\x02\x7c\x7c\x00\x60\x01\x7e\x01\x7e\x02\xa3\x83\x80\x80\x00\x14\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x36\x34\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x36\x34\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x66\x33\x32\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0d\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x5f\x66\x33\x32\x00\x05\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0d\x70\x72\x69\x6e\x74\x5f\x66\x36\x34\x5f\x66\x36\x34\x00\x06\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x66\x36\x34\x00\x03\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x36\x34\x2d\x3e\x69\x36\x34\x00\x07\x04\x74\x65\x73\x74\x07\x74\x61\x67\x2d\x69\x33\x32\x04\x00\x00\x04\x74\x65\x73\x74\x07\x74\x61\x67\x2d\x66\x33\x32\x04\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x04\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x04\x03\x83\x80\x80\x80\x00\x02\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x02\x02\x07\xb3\x80\x80\x80\x00\x08\x02\x70\x31\x00\x0b\x02\x70\x32\x00\x0c\x02\x70\x33\x00\x0d\x02\x70\x34\x00\x0d\x02\x70\x35\x00\x0e\x02\x70\x36\x00\x0f\x07\x70\x72\x69\x6e\x74\x33\x32\x00\x12\x07\x70\x72\x69\x6e\x74\x36\x34\x00\x13\x09\x8c\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x02\xd2\x02\x0b\xd2\x05\x0b\x0a\xf0\x80\x80\x80\x00\x02\xac\x80\x80\x80\x00\x01\x01\x7d\x20\x00\xb2\x21\x01\x20\x00\x10\x00\x20\x00\x41\x01\x6a\x43\x00\x00\x28\x42\x10\x06\x20\x00\x10\x02\x20\x00\x10\x08\x20\x01\x10\x04\x20\x00\x41\x00\x11\x00\x00\x0b\xb9\x80\x80\x80\x00\x01\x01\x7c\x20\x00\x10\x0a\xb9\x21\x01\x20\x00\x10\x01\x20\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa0\x44\x00\x00\x00\x00\x00\x80\x4a\x40\x10\x07\x20\x00\x10\x03\x20\x01\x10\x05\x20\x01\x10\x09\x20\x01\x41\x01\x11\x03\x00\x0b");

// imports.wast:33
let $2 = instance($$2);

// imports.wast:95
assert_return(() => call($2, "print32", [13]));

// imports.wast:96
assert_return(() => call($2, "print64", [24n]));

// imports.wast:98
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x00\x01");

// imports.wast:107
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7f\x00\x02\x96\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x07\x8d\x80\x80\x80\x00\x01\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x01\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x20\x00\x10\x00\x0b");

// imports.wast:107
let $3 = instance($$3);

// imports.wast:114
assert_return(() => call($3, "print_i32", [13]));

// imports.wast:117
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x01\x7f\x00\x60\x02\x7f\x7f\x01\x7f\x02\x96\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x8d\x80\x80\x80\x00\x01\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x00\x01\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x20\x00\x20\x01\x6a\x0b");

// imports.wast:117
let $4 = instance($$4);

// imports.wast:124
assert_return(() => call($4, "print_i32", [5, 11]), 16);

// imports.wast:126
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x00\x00");

// imports.wast:126
let $5 = instance($$5);

// imports.wast:127
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7f\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:127
let $6 = instance($$6);

// imports.wast:128
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x66\x33\x32\x00\x00");

// imports.wast:128
let $7 = instance($$7);

// imports.wast:129
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:129
let $8 = instance($$8);

// imports.wast:130
let $$9 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x66\x33\x32\x00\x00");

// imports.wast:130
let $9 = instance($$9);

// imports.wast:131
let $$10 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x33\x32\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:131
let $10 = instance($$10);

// imports.wast:132
let $$11 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7e\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x36\x34\x2d\x3e\x69\x36\x34\x00\x00");

// imports.wast:132
let $11 = instance($$11);

// imports.wast:135
let $$12 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x90\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x00\x00");

// imports.wast:134
assert_unlinkable($$12);

// imports.wast:139
let $$13 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x00\x00");

// imports.wast:138
assert_unlinkable($$13);

// imports.wast:144
let $$14 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7f\x00\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x00\x00");

// imports.wast:143
assert_unlinkable($$14);

// imports.wast:148
let $$15 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x00\x00");

// imports.wast:147
assert_unlinkable($$15);

// imports.wast:152
let $$16 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x00\x00");

// imports.wast:151
assert_unlinkable($$16);

// imports.wast:156
let $$17 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:155
assert_unlinkable($$17);

// imports.wast:160
let $$18 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:159
assert_unlinkable($$18);

// imports.wast:164
let $$19 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:163
assert_unlinkable($$19);

// imports.wast:168
let $$20 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7e\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:167
assert_unlinkable($$20);

// imports.wast:172
let $$21 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x00\x00");

// imports.wast:171
assert_unlinkable($$21);

// imports.wast:176
let $$22 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:175
assert_unlinkable($$22);

// imports.wast:180
let $$23 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7f\x00\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:179
assert_unlinkable($$23);

// imports.wast:184
let $$24 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:183
assert_unlinkable($$24);

// imports.wast:188
let $$25 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:187
assert_unlinkable($$25);

// imports.wast:192
let $$26 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x09\x66\x75\x6e\x63\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:191
assert_unlinkable($$26);

// imports.wast:196
let $$27 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x33\x32\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:195
assert_unlinkable($$27);

// imports.wast:200
let $$28 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7f\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x33\x32\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:199
assert_unlinkable($$28);

// imports.wast:204
let $$29 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x66\x75\x6e\x63\x2d\x69\x33\x32\x2d\x3e\x69\x33\x32\x00\x00");

// imports.wast:203
assert_unlinkable($$29);

// imports.wast:209
let $$30 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x93\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x00\x00");

// imports.wast:208
assert_unlinkable($$30);

// imports.wast:213
let $$31 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x00\x00");

// imports.wast:212
assert_unlinkable($$31);

// imports.wast:217
let $$32 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x00\x00");

// imports.wast:216
assert_unlinkable($$32);

// imports.wast:221
let $$33 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x8c\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x03\x74\x61\x67\x00\x00");

// imports.wast:220
assert_unlinkable($$33);

// imports.wast:225
let $$34 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x97\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x00\x00");

// imports.wast:224
assert_unlinkable($$34);

// imports.wast:229
let $$35 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x92\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x00\x00");

// imports.wast:228
assert_unlinkable($$35);

// imports.wast:233
let $$36 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x93\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x00\x00");

// imports.wast:232
assert_unlinkable($$36);

// imports.wast:238
let $$37 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x04\x00\x00");

// imports.wast:237
assert_unlinkable($$37);

// imports.wast:242
let $$38 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x02\x8d\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x03\x74\x61\x67\x04\x00\x00");

// imports.wast:241
assert_unlinkable($$38);

// imports.wast:246
let $$39 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x74\x61\x67\x2d\x69\x33\x32\x04\x00\x00");

// imports.wast:245
assert_unlinkable($$39);

// imports.wast:250
let $$40 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x74\x61\x67\x2d\x69\x33\x32\x04\x00\x00");

// imports.wast:249
assert_unlinkable($$40);

// imports.wast:254
let $$41 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x04\x00\x00");

// imports.wast:253
assert_unlinkable($$41);

// imports.wast:261
let $$42 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x91\x80\x80\x80\x00\x04\x60\x00\x01\x7f\x60\x00\x01\x7e\x60\x00\x01\x7d\x60\x00\x01\x7c\x02\xa2\x81\x80\x80\x00\x07\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x36\x34\x03\x7e\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x66\x33\x32\x03\x7d\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x66\x36\x34\x03\x7c\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x01\x02\x03\x07\xb9\x80\x80\x80\x00\x07\x05\x67\x65\x74\x2d\x30\x00\x00\x05\x67\x65\x74\x2d\x31\x00\x01\x05\x67\x65\x74\x2d\x78\x00\x02\x05\x67\x65\x74\x2d\x79\x00\x03\x05\x67\x65\x74\x2d\x34\x00\x04\x05\x67\x65\x74\x2d\x35\x00\x05\x05\x67\x65\x74\x2d\x36\x00\x06\x0a\xc0\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x23\x00\x0b\x84\x80\x80\x80\x00\x00\x23\x01\x0b\x84\x80\x80\x80\x00\x00\x23\x02\x0b\x84\x80\x80\x80\x00\x00\x23\x03\x0b\x84\x80\x80\x80\x00\x00\x23\x04\x0b\x84\x80\x80\x80\x00\x00\x23\x05\x0b\x84\x80\x80\x80\x00\x00\x23\x06\x0b");

// imports.wast:261
let $12 = instance($$42);

// imports.wast:281
assert_return(() => call($12, "get-0", []), 666);

// imports.wast:282
assert_return(() => call($12, "get-1", []), 666);

// imports.wast:283
assert_return(() => call($12, "get-x", []), 666);

// imports.wast:284
assert_return(() => call($12, "get-y", []), 666);

// imports.wast:285
assert_return(() => call($12, "get-4", []), 666n);

// imports.wast:286
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x35\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x66\xa6\x26\x44\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b"), exports($12)),  "run", []));  // assert_return(() => call($12, "get-5", []), 666.599975586)

// imports.wast:287
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x36\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\xcd\xcc\xcc\xcc\xcc\xd4\x84\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b"), exports($12)),  "run", []));  // assert_return(() => call($12, "get-6", []), 666.6)

// imports.wast:289
let $$43 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7f\x00");

// imports.wast:289
let $13 = instance($$43);

// imports.wast:290
let $$44 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x7d\x00");

// imports.wast:290
let $14 = instance($$44);

// imports.wast:291
let $$45 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x7e\x01");

// imports.wast:291
let $15 = instance($$45);

// imports.wast:294
let $$46 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x03\x7f\x00");

// imports.wast:293
assert_unlinkable($$46);

// imports.wast:298
let $$47 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x03\x7f\x00");

// imports.wast:297
assert_unlinkable($$47);

// imports.wast:303
let $$48 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7e\x00");

// imports.wast:302
assert_unlinkable($$48);

// imports.wast:307
let $$49 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7d\x00");

// imports.wast:306
assert_unlinkable($$49);

// imports.wast:311
let $$50 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7c\x00");

// imports.wast:310
assert_unlinkable($$50);

// imports.wast:315
let $$51 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7f\x01");

// imports.wast:314
assert_unlinkable($$51);

// imports.wast:319
let $$52 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x7f\x00");

// imports.wast:318
assert_unlinkable($$52);

// imports.wast:323
let $$53 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x7e\x00");

// imports.wast:322
assert_unlinkable($$53);

// imports.wast:327
let $$54 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x7c\x00");

// imports.wast:326
assert_unlinkable($$54);

// imports.wast:331
let $$55 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x66\x33\x32\x03\x7d\x01");

// imports.wast:330
assert_unlinkable($$55);

// imports.wast:335
let $$56 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x7f\x01");

// imports.wast:334
assert_unlinkable($$56);

// imports.wast:339
let $$57 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x7d\x01");

// imports.wast:338
assert_unlinkable($$57);

// imports.wast:343
let $$58 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x7c\x01");

// imports.wast:342
assert_unlinkable($$58);

// imports.wast:347
let $$59 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x36\x34\x03\x7e\x00");

// imports.wast:346
assert_unlinkable($$59);

// imports.wast:352
let $$60 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x8e\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x03\x7f\x00");

// imports.wast:351
assert_unlinkable($$60);

// imports.wast:356
let $$61 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x03\x7f\x00");

// imports.wast:355
assert_unlinkable($$61);

// imports.wast:360
let $$62 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x03\x7f\x00");

// imports.wast:359
assert_unlinkable($$62);

// imports.wast:364
let $$63 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x03\x7f\x00");

// imports.wast:363
assert_unlinkable($$63);

// imports.wast:368
let $$64 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x93\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x03\x7f\x00");

// imports.wast:367
assert_unlinkable($$64);

// imports.wast:372
let $$65 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x03\x7f\x00");

// imports.wast:371
assert_unlinkable($$65);

// imports.wast:379
let $$66 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x02\xad\x80\x80\x80\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x0a\x14\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a\x03\x84\x80\x80\x80\x00\x03\x01\x00\x00\x07\x88\x80\x80\x80\x00\x01\x04\x63\x61\x6c\x6c\x00\x00\x09\x88\x80\x80\x80\x00\x01\x00\x41\x01\x0b\x02\x01\x02\x0a\x9f\x80\x80\x80\x00\x03\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x16\x0b");

// imports.wast:379
let $16 = instance($$66);

// imports.wast:392
assert_trap(() => call($16, "call", [0]));

// imports.wast:393
assert_return(() => call($16, "call", [1]), 11);

// imports.wast:394
assert_return(() => call($16, "call", [2]), 22);

// imports.wast:395
assert_trap(() => call($16, "call", [3]));

// imports.wast:396
assert_trap(() => call($16, "call", [100]));

// imports.wast:399
let $$67 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x02\xad\x80\x80\x80\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x0a\x14\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a\x03\x84\x80\x80\x80\x00\x03\x01\x00\x00\x07\x88\x80\x80\x80\x00\x01\x04\x63\x61\x6c\x6c\x00\x00\x09\x88\x80\x80\x80\x00\x01\x00\x41\x01\x0b\x02\x01\x02\x0a\x9f\x80\x80\x80\x00\x03\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x16\x0b");

// imports.wast:399
let $17 = instance($$67);

// imports.wast:412
assert_trap(() => call($17, "call", [0]));

// imports.wast:413
assert_return(() => call($17, "call", [1]), 11);

// imports.wast:414
assert_return(() => call($17, "call", [2]), 22);

// imports.wast:415
assert_trap(() => call($17, "call", [3]));

// imports.wast:416
assert_trap(() => call($17, "call", [100]));

// imports.wast:418
let $$68 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\xd7\x80\x80\x80\x00\x04\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x00\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a\x04\x8d\x80\x80\x80\x00\x04\x70\x00\x0a\x70\x00\x0a\x70\x04\x0a\x70\x04\x0a");

// imports.wast:418
let $18 = instance($$68);

// imports.wast:429
let $$69 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x00\x0a");

// imports.wast:429
let $19 = instance($$69);

// imports.wast:430
let $$70 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x00\x05");

// imports.wast:430
let $20 = instance($$70);

// imports.wast:431
let $$71 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x00\x00");

// imports.wast:431
let $21 = instance($$71);

// imports.wast:432
let $$72 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x00\x0a");

// imports.wast:432
let $22 = instance($$72);

// imports.wast:433
let $$73 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x00\x05");

// imports.wast:433
let $23 = instance($$73);

// imports.wast:434
let $$74 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x00\x00");

// imports.wast:434
let $24 = instance($$74);

// imports.wast:435
let $$75 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x0a\x14");

// imports.wast:435
let $25 = instance($$75);

// imports.wast:436
let $$76 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x05\x14");

// imports.wast:436
let $26 = instance($$76);

// imports.wast:437
let $$77 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x00\x14");

// imports.wast:437
let $27 = instance($$77);

// imports.wast:438
let $$78 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x0a\x19");

// imports.wast:438
let $28 = instance($$78);

// imports.wast:439
let $$79 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x05\x19");

// imports.wast:439
let $29 = instance($$79);

// imports.wast:440
let $$80 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x00\x19");

// imports.wast:440
let $30 = instance($$80);

// imports.wast:441
let $$81 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a");

// imports.wast:441
let $31 = instance($$81);

// imports.wast:442
let $$82 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x05");

// imports.wast:442
let $32 = instance($$82);

// imports.wast:443
let $$83 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x00");

// imports.wast:443
let $33 = instance($$83);

// imports.wast:444
let $$84 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x04\x0a");

// imports.wast:444
let $34 = instance($$84);

// imports.wast:445
let $$85 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x04\x05");

// imports.wast:445
let $35 = instance($$85);

// imports.wast:446
let $$86 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x04\x00");

// imports.wast:446
let $36 = instance($$86);

// imports.wast:447
let $$87 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x0a\x14");

// imports.wast:447
let $37 = instance($$87);

// imports.wast:448
let $$88 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x05\x14");

// imports.wast:448
let $38 = instance($$88);

// imports.wast:449
let $$89 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x00\x14");

// imports.wast:449
let $39 = instance($$89);

// imports.wast:450
let $$90 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x0a\x19");

// imports.wast:450
let $40 = instance($$90);

// imports.wast:451
let $$91 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x05\x19");

// imports.wast:451
let $41 = instance($$91);

// imports.wast:452
let $$92 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x00\x19");

// imports.wast:452
let $42 = instance($$92);

// imports.wast:453
let $$93 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x0a");

// imports.wast:453
let $43 = instance($$93);

// imports.wast:454
let $$94 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x05");

// imports.wast:454
let $44 = instance($$94);

// imports.wast:455
let $$95 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x00");

// imports.wast:455
let $45 = instance($$95);

// imports.wast:456
let $$96 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x0a\x14");

// imports.wast:456
let $46 = instance($$96);

// imports.wast:457
let $$97 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x05\x14");

// imports.wast:457
let $47 = instance($$97);

// imports.wast:458
let $$98 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x00\x14");

// imports.wast:458
let $48 = instance($$98);

// imports.wast:459
let $$99 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x0a\x19");

// imports.wast:459
let $49 = instance($$99);

// imports.wast:460
let $$100 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x05\x19");

// imports.wast:460
let $50 = instance($$100);

// imports.wast:463
let $$101 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x01\x70\x00\x0a");

// imports.wast:462
assert_unlinkable($$101);

// imports.wast:467
let $$102 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x01\x70\x00\x0a");

// imports.wast:466
assert_unlinkable($$102);

// imports.wast:472
let $$103 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x00\x0c");

// imports.wast:471
assert_unlinkable($$103);

// imports.wast:476
let $$104 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x01\x0a\x14");

// imports.wast:475
assert_unlinkable($$104);

// imports.wast:480
let $$105 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0c");

// imports.wast:479
assert_unlinkable($$105);

// imports.wast:484
let $$106 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x9a\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x05\x0a\x14");

// imports.wast:483
assert_unlinkable($$106);

// imports.wast:488
let $$107 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x0c\x14");

// imports.wast:487
assert_unlinkable($$107);

// imports.wast:492
let $$108 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x0a\x12");

// imports.wast:491
assert_unlinkable($$108);

// imports.wast:496
let $$109 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x0c\x14");

// imports.wast:495
assert_unlinkable($$109);

// imports.wast:500
let $$110 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x0a\x12");

// imports.wast:499
assert_unlinkable($$110);

// imports.wast:504
let $$111 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x0c");

// imports.wast:503
assert_unlinkable($$111);

// imports.wast:508
let $$112 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x01\x70\x01\x0a\x0f");

// imports.wast:507
assert_unlinkable($$112);

// imports.wast:513
let $$113 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x8f\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x04\x66\x75\x6e\x63\x01\x70\x00\x0a");

// imports.wast:512
assert_unlinkable($$113);

// imports.wast:517
let $$114 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x01\x70\x00\x0a");

// imports.wast:516
assert_unlinkable($$114);

// imports.wast:521
let $$115 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x01\x70\x00\x0a");

// imports.wast:520
assert_unlinkable($$115);

// imports.wast:525
let $$116 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x01\x70\x00\x0a");

// imports.wast:524
assert_unlinkable($$116);

// imports.wast:530
let $$117 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x04\x0a");

// imports.wast:529
assert_unlinkable($$117);

// imports.wast:534
let $$118 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x69\x6e\x66\x01\x70\x00\x0a");

// imports.wast:533
assert_unlinkable($$118);

// imports.wast:538
let $$119 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0b\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x32\x30\x01\x70\x05\x0a\x14");

// imports.wast:537
assert_unlinkable($$119);

// imports.wast:542
let $$120 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0d\x74\x61\x62\x6c\x65\x36\x34\x2d\x31\x30\x2d\x32\x30\x01\x70\x01\x0a\x14");

// imports.wast:541
assert_unlinkable($$120);

// imports.wast:549
let $$121 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\xc1\x80\x80\x80\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x02\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x6c\x6f\x61\x64\x00\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b\x0b\x87\x80\x80\x80\x00\x01\x00\x41\x0a\x0b\x01\x10");

// imports.wast:549
let $51 = instance($$121);

// imports.wast:558
assert_return(() => call($51, "load", [0]), 0);

// imports.wast:559
assert_return(() => call($51, "load", [10]), 16);

// imports.wast:560
assert_return(() => call($51, "load", [8]), 1_048_576);

// imports.wast:561
assert_trap(() => call($51, "load", [1_000_000]));

// imports.wast:563
let $$122 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\xc1\x80\x80\x80\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x02\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x6c\x6f\x61\x64\x00\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b\x0b\x87\x80\x80\x80\x00\x01\x00\x41\x0a\x0b\x01\x10");

// imports.wast:563
let $52 = instance($$122);

// imports.wast:571
assert_return(() => call($52, "load", [0]), 0);

// imports.wast:572
assert_return(() => call($52, "load", [10]), 16);

// imports.wast:573
assert_return(() => call($52, "load", [8]), 1_048_576);

// imports.wast:574
assert_trap(() => call($52, "load", [1_000_000]));

// imports.wast:576
let $$123 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x02");

// imports.wast:576
let $53 = instance($$123);

// imports.wast:577
let $$124 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x01");

// imports.wast:577
let $54 = instance($$124);

// imports.wast:578
let $$125 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x00");

// imports.wast:578
let $55 = instance($$125);

// imports.wast:579
let $$126 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x02");

// imports.wast:579
let $56 = instance($$126);

// imports.wast:580
let $$127 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x01");

// imports.wast:580
let $57 = instance($$127);

// imports.wast:581
let $$128 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x00");

// imports.wast:581
let $58 = instance($$128);

// imports.wast:582
let $$129 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x02\x04");

// imports.wast:582
let $59 = instance($$129);

// imports.wast:583
let $$130 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x01\x04");

// imports.wast:583
let $60 = instance($$130);

// imports.wast:584
let $$131 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x00\x04");

// imports.wast:584
let $61 = instance($$131);

// imports.wast:585
let $$132 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x02\x05");

// imports.wast:585
let $62 = instance($$132);

// imports.wast:586
let $$133 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x02\x06");

// imports.wast:586
let $63 = instance($$133);

// imports.wast:587
let $$134 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x02");

// imports.wast:587
let $64 = instance($$134);

// imports.wast:588
let $$135 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x01");

// imports.wast:588
let $65 = instance($$135);

// imports.wast:589
let $$136 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x00");

// imports.wast:589
let $66 = instance($$136);

// imports.wast:590
let $$137 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x02");

// imports.wast:590
let $67 = instance($$137);

// imports.wast:591
let $$138 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x01");

// imports.wast:591
let $68 = instance($$138);

// imports.wast:592
let $$139 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x00");

// imports.wast:592
let $69 = instance($$139);

// imports.wast:593
let $$140 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x02\x04");

// imports.wast:593
let $70 = instance($$140);

// imports.wast:594
let $$141 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x01\x04");

// imports.wast:594
let $71 = instance($$141);

// imports.wast:595
let $$142 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x00\x04");

// imports.wast:595
let $72 = instance($$142);

// imports.wast:596
let $$143 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x02\x05");

// imports.wast:596
let $73 = instance($$143);

// imports.wast:597
let $$144 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x01\x05");

// imports.wast:597
let $74 = instance($$144);

// imports.wast:598
let $$145 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x00\x05");

// imports.wast:598
let $75 = instance($$145);

// imports.wast:599
let $$146 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x01");

// imports.wast:599
let $76 = instance($$146);

// imports.wast:600
let $$147 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x00");

// imports.wast:600
let $77 = instance($$147);

// imports.wast:601
let $$148 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02");

// imports.wast:601
let $78 = instance($$148);

// imports.wast:602
let $$149 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x02");

// imports.wast:602
let $79 = instance($$149);

// imports.wast:603
let $$150 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x03");

// imports.wast:603
let $80 = instance($$150);

// imports.wast:604
let $$151 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x03");

// imports.wast:604
let $81 = instance($$151);

// imports.wast:607
let $$152 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x02\x00\x01");

// imports.wast:606
assert_unlinkable($$152);

// imports.wast:611
let $$153 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x02\x00\x01");

// imports.wast:610
assert_unlinkable($$153);

// imports.wast:616
let $$154 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x00\x01");

// imports.wast:615
assert_unlinkable($$154);

// imports.wast:620
let $$155 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x00\x02");

// imports.wast:619
assert_unlinkable($$155);

// imports.wast:624
let $$156 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x00\x03");

// imports.wast:623
assert_unlinkable($$156);

// imports.wast:628
let $$157 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x02\x03");

// imports.wast:627
assert_unlinkable($$157);

// imports.wast:632
let $$158 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x03");

// imports.wast:631
assert_unlinkable($$158);

// imports.wast:636
let $$159 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x00\x01");

// imports.wast:635
assert_unlinkable($$159);

// imports.wast:640
let $$160 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x00\x02");

// imports.wast:639
assert_unlinkable($$160);

// imports.wast:644
let $$161 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x00\x03");

// imports.wast:643
assert_unlinkable($$161);

// imports.wast:648
let $$162 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x02\x02");

// imports.wast:647
assert_unlinkable($$162);

// imports.wast:652
let $$163 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x02\x03");

// imports.wast:651
assert_unlinkable($$163);

// imports.wast:656
let $$164 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x03\x03");

// imports.wast:655
assert_unlinkable($$164);

// imports.wast:660
let $$165 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x03\x04");

// imports.wast:659
assert_unlinkable($$165);

// imports.wast:664
let $$166 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x03\x05");

// imports.wast:663
assert_unlinkable($$166);

// imports.wast:668
let $$167 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x04\x04");

// imports.wast:667
assert_unlinkable($$167);

// imports.wast:672
let $$168 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01\x04\x05");

// imports.wast:671
assert_unlinkable($$168);

// imports.wast:676
let $$169 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x03");

// imports.wast:675
assert_unlinkable($$169);

// imports.wast:680
let $$170 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x04");

// imports.wast:679
assert_unlinkable($$170);

// imports.wast:684
let $$171 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x05");

// imports.wast:683
assert_unlinkable($$171);

// imports.wast:688
let $$172 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x05\x00\x01");

// imports.wast:687
assert_unlinkable($$172);

// imports.wast:692
let $$173 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x05\x00\x02");

// imports.wast:691
assert_unlinkable($$173);

// imports.wast:696
let $$174 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x05\x00\x03");

// imports.wast:695
assert_unlinkable($$174);

// imports.wast:700
let $$175 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x99\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x05\x02\x03");

// imports.wast:699
assert_unlinkable($$175);

// imports.wast:704
let $$176 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x04\x03");

// imports.wast:703
assert_unlinkable($$176);

// imports.wast:708
let $$177 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x00\x01");

// imports.wast:707
assert_unlinkable($$177);

// imports.wast:712
let $$178 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x00\x02");

// imports.wast:711
assert_unlinkable($$178);

// imports.wast:716
let $$179 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x00\x03");

// imports.wast:715
assert_unlinkable($$179);

// imports.wast:720
let $$180 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x02\x02");

// imports.wast:719
assert_unlinkable($$180);

// imports.wast:724
let $$181 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x02\x03");

// imports.wast:723
assert_unlinkable($$181);

// imports.wast:728
let $$182 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x03\x03");

// imports.wast:727
assert_unlinkable($$182);

// imports.wast:732
let $$183 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x03\x04");

// imports.wast:731
assert_unlinkable($$183);

// imports.wast:736
let $$184 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x03\x05");

// imports.wast:735
assert_unlinkable($$184);

// imports.wast:740
let $$185 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x04\x04");

// imports.wast:739
assert_unlinkable($$185);

// imports.wast:744
let $$186 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x05\x04\x05");

// imports.wast:743
assert_unlinkable($$186);

// imports.wast:748
let $$187 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x03");

// imports.wast:747
assert_unlinkable($$187);

// imports.wast:752
let $$188 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x04");

// imports.wast:751
assert_unlinkable($$188);

// imports.wast:756
let $$189 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x04\x05");

// imports.wast:755
assert_unlinkable($$189);

// imports.wast:760
let $$190 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x02");

// imports.wast:759
assert_unlinkable($$190);

// imports.wast:764
let $$191 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x01");

// imports.wast:763
assert_unlinkable($$191);

// imports.wast:769
let $$192 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x04\x02");

// imports.wast:768
assert_unlinkable($$192);

// imports.wast:773
let $$193 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x69\x6e\x66\x02\x00\x02");

// imports.wast:772
assert_unlinkable($$193);

// imports.wast:777
let $$194 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x05\x02\x04");

// imports.wast:776
assert_unlinkable($$194);

// imports.wast:781
let $$195 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x36\x34\x2d\x32\x2d\x34\x02\x01\x02\x04");

// imports.wast:780
assert_unlinkable($$195);

// imports.wast:786
let $$196 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x92\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x08\x66\x75\x6e\x63\x2d\x69\x33\x32\x02\x00\x01");

// imports.wast:785
assert_unlinkable($$196);

// imports.wast:790
let $$197 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x02\x00\x01");

// imports.wast:789
assert_unlinkable($$197);

// imports.wast:794
let $$198 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x74\x61\x62\x6c\x65\x2d\x31\x30\x2d\x69\x6e\x66\x02\x00\x01");

// imports.wast:793
assert_unlinkable($$198);

// imports.wast:798
let $$199 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x09\x70\x72\x69\x6e\x74\x5f\x69\x33\x32\x02\x00\x01");

// imports.wast:797
assert_unlinkable($$199);

// imports.wast:802
let $$200 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x02\x00\x01");

// imports.wast:801
assert_unlinkable($$200);

// imports.wast:806
let $$201 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x93\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x05\x74\x61\x62\x6c\x65\x02\x00\x01");

// imports.wast:805
assert_unlinkable($$201);

// imports.wast:811
let $$202 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x02");

// imports.wast:810
assert_unlinkable($$202);

// imports.wast:815
let $$203 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x01");

// imports.wast:814
assert_unlinkable($$203);

// imports.wast:819
let $$204 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x03\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x67\x72\x6f\x77\x00\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x20\x00\x40\x00\x0b");

// imports.wast:819
let $82 = instance($$204);

// imports.wast:823
assert_return(() => call($82, "grow", [0]), 1);

// imports.wast:824
assert_return(() => call($82, "grow", [1]), 1);

// imports.wast:825
assert_return(() => call($82, "grow", [0]), 2);

// imports.wast:826
assert_return(() => call($82, "grow", [1]), -1);

// imports.wast:827
assert_return(() => call($82, "grow", [0]), 2);

// imports.wast:832
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:836
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:840
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:844
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:849
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:853
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:857
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:861
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:866
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:870
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:874
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:878
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:883
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:887
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:891
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:895
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// imports.wast:903
let $$205 = module("\x00\x61\x73\x6d\x01\x00\x00\x00");

// imports.wast:903
let $83 = instance($$205);

// imports.wast:904
register("not wasm", $83)

// imports.wast:906
let $$206 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa9\x80\x80\x80\x00\x0a\x60\x00\x00\x60\x01\x7f\x00\x60\x02\x7f\x7f\x00\x60\x01\x7e\x00\x60\x01\x7d\x00\x60\x01\x7c\x00\x60\x00\x01\x7f\x60\x00\x01\x7e\x60\x00\x01\x7d\x60\x00\x01\x7c\x02\xe8\x82\x80\x80\x00\x10\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x01\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x02\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x03\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x04\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x05\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x06\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x07\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x08\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x00\x09\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x03\x7f\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x03\x7e\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x03\x7d\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x03\x7c\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x01\x70\x00\x00\x08\x6e\x6f\x74\x20\x77\x61\x73\x6d\x0a\x6f\x76\x65\x72\x6c\x6f\x61\x64\x65\x64\x02\x00\x00");

// imports.wast:905
assert_unlinkable($$206);
